created: 20161205072934901
modified: 20161205073222667
tags: Typescript Webpack
title: How can I use Webpack to expose multiple objects in one file by `expose-loader` and `export-loader`?
type: text/vnd.tiddlywiki

Now I use `resolve.alias` like this:

```javascript
//  webpack.config.js

var blockly_path = path.resolve('libs/blockly');
var blockly_compressed = path.join(blockly_path, 'blockly_compressed.js');

//  ...
  resolve: {
    // Add '.ts' and '.tsx' as resolvable extensions.
    extensions: ['', '.webpack.js', '.web.js', '.ts', '.tsx', '.js'],
    alias: {
      google_blockly: blockly_compressed
    }
  },
  module: {
    loaders: {
      {
        test: blockly_compressed,
        loader: 'expose?GoogleBlockly!exports?Blockly&goog'
      },
      {
        test: blocks_compressed,
        loader: 'imports?GoogleBlockly=' + blockly_compressed + ',Blockly=>GoogleBlockly.Blockly,goog=>GoogleBlockly.goog'
      },
      {
        test: /\.js$/,
        include: /js\/blocks\/overrides_blockly/, //  For blockly override js files
        exclude: /(node_modules)/,
        loader: 'imports?GoogleBlockly=' + blockly_compressed + ',Blockly=>GoogleBlockly.Blockly,goog=>GoogleBlockly.goog'
      },
    }
  }
```

Then declare and use blockly as a module:

```ts
// js_transition.d.ts
declare module 'google_blockly' {
  export let Blockly:Blockly;
  export let goog:any;
}

// Using
import {Blockly} from 'google_blockly';
```